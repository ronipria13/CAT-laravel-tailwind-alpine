{"version":3,"file":"/js/tom-select.complete.js","mappings":"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","sources":["webpack:///./node_modules/tom-select/dist/js/tom-select.complete.js","webpack:///webpack/bootstrap","webpack:///./resources/js/tom-select.complete.js"],"sourcesContent":["/**\n* Tom Select v2.0.0\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n}(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = {};\n\t  }\n\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      this._events[event] = this._events[event] || [];\n\n\t      this._events[event].push(fct);\n\t    });\n\t  }\n\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\n\t    forEvents(events, event => {\n\t      if (n === 1) return delete this._events[event];\n\t      if (event in this._events === false) return;\n\n\t      this._events[event].splice(this._events[event].indexOf(fct), 1);\n\t    });\n\t  }\n\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      if (event in self._events === false) return;\n\n\t      for (let fct of self._events[event]) {\n\t        fct.apply(self, args);\n\t      }\n\t    });\n\t  }\n\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class extends Interface {\n\t    constructor(...args) {\n\t      super(...args);\n\t      this.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\t    }\n\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\n\n\t    initializePlugins(plugins) {\n\t      var key, name;\n\t      const self = this;\n\t      const queue = [];\n\n\t      if (Array.isArray(plugins)) {\n\t        plugins.forEach(plugin => {\n\t          if (typeof plugin === 'string') {\n\t            queue.push(plugin);\n\t          } else {\n\t            self.plugins.settings[plugin.name] = plugin.options;\n\t            queue.push(plugin.name);\n\t          }\n\t        });\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\n\t      while (name = queue.shift()) {\n\t        self.require(name);\n\t      }\n\t    }\n\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     */\n\n\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\n\t        self.loadPlugin(name);\n\t      }\n\n\t      return plugins.loaded[name];\n\t    }\n\n\t  };\n\t}\n\n\t// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\tvar latin_pat;\n\tconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\n\n\tconst accent_reg = new RegExp(accent_pat, 'g');\n\tvar diacritic_patterns;\n\tconst latin_convert = {\n\t  'æ': 'ae',\n\t  'ⱥ': 'a',\n\t  'ø': 'o'\n\t};\n\tconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'), 'g');\n\t/**\n\t * code points generated from toCodePoints();\n\t * removed 65339 to 65345\n\t */\n\n\tconst code_points = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]];\n\t/**\n\t * Remove accents\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t *\n\t */\n\n\tconst asciifold = str => {\n\t  return str.normalize('NFKD').replace(accent_reg, '').toLowerCase().replace(convert_pat, function (foreignletter) {\n\t    return latin_convert[foreignletter];\n\t  });\n\t};\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t * \tex ['a','b'] => [ab]\n\t *\n\t */\n\n\n\tconst arrayToPattern = (chars, glue = '|') => {\n\t  if (chars.length == 1) {\n\t    return chars[0];\n\t  }\n\n\t  var longest = 1;\n\t  chars.forEach(a => {\n\t    longest = Math.max(longest, a.length);\n\t  });\n\n\t  if (longest == 1) {\n\t    return '[' + chars.join('') + ']';\n\t  }\n\n\t  return '(?:' + chars.join(glue) + ')';\n\t};\n\t/**\n\t * Get all possible combinations of substrings that add up to the given string\n\t * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n\t *\n\t */\n\n\tconst allSubstrings = input => {\n\t  if (input.length === 1) return [[input]];\n\t  var result = [];\n\t  allSubstrings(input.substring(1)).forEach(function (subresult) {\n\t    var tmp = subresult.slice(0);\n\t    tmp[0] = input.charAt(0) + tmp[0];\n\t    result.push(tmp);\n\t    tmp = subresult.slice(0);\n\t    tmp.unshift(input.charAt(0));\n\t    result.push(tmp);\n\t  });\n\t  return result;\n\t};\n\t/**\n\t * Generate a list of diacritics from the list of code points\n\t *\n\t */\n\n\tconst generateDiacritics = () => {\n\t  var diacritics = {};\n\t  code_points.forEach(code_range => {\n\t    for (let i = code_range[0]; i <= code_range[1]; i++) {\n\t      let diacritic = String.fromCharCode(i);\n\t      let latin = asciifold(diacritic);\n\n\t      if (latin == diacritic.toLowerCase()) {\n\t        continue;\n\t      }\n\n\t      if (!(latin in diacritics)) {\n\t        diacritics[latin] = [latin];\n\t      }\n\n\t      var patt = new RegExp(arrayToPattern(diacritics[latin]), 'iu');\n\n\t      if (diacritic.match(patt)) {\n\t        continue;\n\t      }\n\n\t      diacritics[latin].push(diacritic);\n\t    }\n\t  });\n\t  var latin_chars = Object.keys(diacritics); // latin character pattern\n\t  // match longer substrings first\n\n\t  latin_chars = latin_chars.sort((a, b) => b.length - a.length);\n\t  latin_pat = new RegExp('(' + arrayToPattern(latin_chars) + accent_pat + '*)', 'g'); // build diacritic patterns\n\t  // ae needs: \n\t  //\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\n\t  var diacritic_patterns = {};\n\t  latin_chars.sort((a, b) => a.length - b.length).forEach(latin => {\n\t    var substrings = allSubstrings(latin);\n\t    var pattern = substrings.map(sub_pat => {\n\t      sub_pat = sub_pat.map(l => {\n\t        if (diacritics.hasOwnProperty(l)) {\n\t          return arrayToPattern(diacritics[l]);\n\t        }\n\n\t        return l;\n\t      });\n\t      return arrayToPattern(sub_pat, '');\n\t    });\n\t    diacritic_patterns[latin] = arrayToPattern(pattern);\n\t  });\n\t  return diacritic_patterns;\n\t};\n\t/**\n\t * Expand a regular expression pattern to include diacritics\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t */\n\n\tconst diacriticRegexPoints = regex => {\n\t  if (diacritic_patterns === undefined) {\n\t    diacritic_patterns = generateDiacritics();\n\t  }\n\n\t  const decomposed = regex.normalize('NFKD').toLowerCase();\n\t  return decomposed.split(latin_pat).map(part => {\n\t    if (part == '') {\n\t      return '';\n\t    } // \"ﬄ\" or \"ffl\"\n\n\n\t    const no_accent = asciifold(part);\n\n\t    if (diacritic_patterns.hasOwnProperty(no_accent)) {\n\t      return diacritic_patterns[no_accent];\n\t    } // 'أهلا' (\\u{623}\\u{647}\\u{644}\\u{627}) or 'أهلا' (\\u{627}\\u{654}\\u{647}\\u{644}\\u{627})\n\n\n\t    const composed_part = part.normalize('NFC');\n\n\t    if (composed_part != part) {\n\t      return arrayToPattern([part, composed_part]);\n\t    }\n\n\t    return part;\n\t  }).join('');\n\t};\n\n\t// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\tconst getAttr = (obj, name) => {\n\t  if (!obj) return;\n\t  return obj[name];\n\t};\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tconst getAttrNesting = (obj, name) => {\n\t  if (!obj) return;\n\t  var part,\n\t      names = name.split(\".\");\n\n\t  while ((part = names.shift()) && (obj = obj[part]));\n\n\t  return obj;\n\t};\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t */\n\n\tconst scoreValue = (value, token, weight) => {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t};\n\t/**\n\t *\n\t * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n\t */\n\n\tconst escape_regex = str => {\n\t  return (str + '').replace(/([\\$\\(-\\+\\.\\?\\[-\\^\\{-\\}])/g, '\\\\$1');\n\t};\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tconst propToArray = (obj, key) => {\n\t  var value = obj[key];\n\t  if (typeof value == 'function') return value;\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t};\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\tconst cmp = (a, b) => {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t};\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tclass Sifter {\n\t  // []|{};\n\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        regex = escape_regex(word);\n\n\t        if (this.settings.diacritics) {\n\t          regex = diacriticRegexPoints(regex);\n\t        }\n\n\t        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex ? new RegExp(regex, 'iu') : null,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {function}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field]);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var i = 0,\n\t            score,\n\t            sum = 0;\n\n\t        for (; i < token_count; i++) {\n\t          score = scoreObject(tokens[i], data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var i, n, implicit_score;\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort,\n\t          sort_flds = [],\n\t          multipliers = [];\n\n\t    if (typeof sort == 'function') {\n\t      return sort.bind(this);\n\t    }\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     */\n\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (i = 0, n = sort.length; i < n; i++) {\n\t        if (search.query || sort[i].field !== '$score') {\n\t          sort_flds.push(sort[i]);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (i = 0, n = sort_flds.length; i < n; i++) {\n\t        if (sort_flds[i].field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      }\n\t    } else {\n\t      for (i = 0, n = sort_flds.length; i < n; i++) {\n\t        if (sort_flds[i].field === '$score') {\n\t          sort_flds.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    for (i = 0, n = sort_flds.length; i < n; i++) {\n\t      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t    } // build function\n\n\n\t    const sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    } else if (sort_flds_count === 1) {\n\t      const sort_fld = sort_flds[0].field;\n\t      const multiplier = multipliers[0];\n\t      return function (a, b) {\n\t        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n\t      };\n\t    } else {\n\t      return function (a, b) {\n\t        var i, result, field;\n\n\t        for (i = 0; i < sort_flds_count; i++) {\n\t          field = sort_flds[i].field;\n\t          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n\t          if (result) return result;\n\t        }\n\n\t        return 0;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\t      const fields = [];\n\t      options.fields.forEach(field => {\n\t        if (typeof field == 'string') {\n\t          field = {\n\t            field: field,\n\t            weight: 1\n\t          };\n\t        }\n\n\t        fields.push(field);\n\t        weights[field.field] = 'weight' in field ? field.weight : 1;\n\t      });\n\t      options.fields = fields;\n\t    }\n\n\t    return {\n\t      options: options,\n\t      query: query.toLowerCase().trim(),\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n\t    if (query.length) {\n\t      iterate(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate(self.items, (item, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    const fn_sort = self._getSortFunction(search);\n\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\n\tconst getDom = query => {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\n\t  if (isHtmlString(query)) {\n\t    let div = document.createElement('div');\n\t    div.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\n\t    return div.firstChild;\n\t  }\n\n\t  return document.querySelector(query);\n\t};\n\tconst isHtmlString = arg => {\n\t  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\tconst escapeQuery = query => {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t};\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\n\tconst triggerEvent = (dom_el, event_name) => {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t};\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\n\tconst applyCSS = (dom_el, css) => {\n\t  Object.assign(dom_el.style, css);\n\t};\n\t/**\n\t * Add css classes\n\t *\n\t */\n\n\tconst addClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Return arguments\n\t *\n\t */\n\n\tconst classesArray = args => {\n\t  var classes = [];\n\t  iterate(args, _classes => {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  });\n\t  return classes.filter(Boolean);\n\t};\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\n\t  return arg;\n\t};\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\n\tconst parentMatch = (target, selector, wrapper) => {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\n\t    target = target.parentNode;\n\t  }\n\t};\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * <= 0 - left (first)\n\t *\n\t */\n\n\tconst getTail = (list, direction = 0) => {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\n\t  return list[0];\n\t};\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\n\tconst isEmptyObject = obj => {\n\t  return Object.keys(obj).length === 0;\n\t};\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\n\t  return i;\n\t};\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\n\tconst setAttr = (el, attrs) => {\n\t  iterate(attrs, (val, attr) => {\n\t    if (val == null) {\n\t      el.removeAttribute(attr);\n\t    } else {\n\t      el.setAttribute(attr, '' + val);\n\t    }\n\t  });\n\t};\n\t/**\n\t * Replace a node\n\t */\n\n\tconst replaceNode = (existing, replacement) => {\n\t  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n\t};\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\tconst highlight = (element, regex) => {\n\t  if (regex === null) return; // convet string to regex\n\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  } // Wrap matching part of text node with highlighting <span>, e.g.\n\t  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\n\n\t  const highlightText = node => {\n\t    var match = node.data.match(regex);\n\n\t    if (match && node.data.length > 0) {\n\t      var spannode = document.createElement('span');\n\t      spannode.className = 'highlight';\n\t      var middlebit = node.splitText(match.index);\n\t      middlebit.splitText(match[0].length);\n\t      var middleclone = middlebit.cloneNode(true);\n\t      spannode.appendChild(middleclone);\n\t      replaceNode(middlebit, spannode);\n\t      return 1;\n\t    }\n\n\t    return 0;\n\t  }; // Recurse element node, looking for child text nodes to highlight, unless element\n\t  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\n\n\t  const highlightChildren = node => {\n\t    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t      for (var i = 0; i < node.childNodes.length; ++i) {\n\t        i += highlightRecursive(node.childNodes[i]);\n\t      }\n\t    }\n\t  };\n\n\t  const highlightRecursive = node => {\n\t    if (node.nodeType === 3) {\n\t      return highlightText(node);\n\t    }\n\n\t    highlightChildren(node);\n\t    return 0;\n\t  };\n\n\t  highlightRecursive(element);\n\t};\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\n\tconst removeHighlight = el => {\n\t  var elements = el.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t};\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  //closeAfterSelect: false,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-wrapper',\n\t  controlClass: 'ts-control',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\t  copyClassesToDropdown: false,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tconst hash_key = value => {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  return get_hash(value);\n\t};\n\tconst get_hash = value => {\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t};\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\n\tconst escape_html = str => {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t};\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\n\tconst loadDebounce = (fn, delay) => {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t      clearTimeout(timeout);\n\t    }\n\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t};\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\n\tconst debounce_events = (self, types, fn) => {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {}; // override trigger method\n\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  }; // invoke provided function\n\n\n\t  fn.apply(self, []);\n\t  self.trigger = trigger; // trigger queued events\n\n\t  for (type of types) {\n\t    if (type in event_args) {\n\t      trigger.apply(self, event_args[type]);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t */\n\n\tconst getSelection = input => {\n\t  return {\n\t    start: input.selectionStart || 0,\n\t    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n\t  };\n\t};\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst preventDefault = (evt, stop = false) => {\n\t  if (evt) {\n\t    evt.preventDefault();\n\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t};\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\n\tconst isKeyDown = (key_name, evt) => {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\n\tconst getId = (el, id) => {\n\t  const existing_id = el.getAttribute('id');\n\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\n\t  el.setAttribute('id', id);\n\t  return id;\n\t};\n\t/**\n\t * Returns a string with backslashes added before characters that need to be escaped.\n\t */\n\n\tconst addSlashes = str => {\n\t  return str.replace(/[\\\\\"']/g, '\\\\$&');\n\t};\n\t/**\n\t *\n\t */\n\n\tconst append = (parent, node) => {\n\t  if (node) parent.append(node);\n\t};\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\n\t      var json = attr_data && data[attr_data];\n\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\n\t      return data;\n\t    };\n\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (value == null) return;\n\t      if (!value && !settings.allowEmptyOption) return; // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\t      } else {\n\t        var option_data = readData(option);\n\t        option_data[field_label] = option_data[field_label] || option.textContent;\n\t        option_data[field_value] = option_data[field_value] || value;\n\t        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t        option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t        option_data.$option = option;\n\t        optionsMap[value] = option_data;\n\t        options.push(option_data);\n\t      }\n\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\t      iterate(optgroup.children, option => {\n\t        addOption(option, id);\n\t      });\n\t    };\n\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\t    iterate(input.children, child => {\n\t      tagName = child.tagName.toLowerCase();\n\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    });\n\t  };\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\n\n\t  var init_textbox = () => {\n\t    const data_raw = input.getAttribute(attr_data);\n\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      const values = value.split(settings.delimiter);\n\t      iterate(values, value => {\n\t        const option = {};\n\t        option[field_label] = value;\n\t        option[field_value] = value;\n\t        settings_element.options.push(option);\n\t      });\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\t      iterate(settings_element.options, opt => {\n\t        settings_element.items.push(opt[field_value]);\n\t      });\n\t    }\n\t  };\n\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  // @deprecated 1.8\n\t  constructor(input_arg, user_settings) {\n\t    super();\n\t    this.order = 0;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isInvalid = false;\n\t    this.isValid = true;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.hasOptions = false;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\n\t    input.tomselect = this; // detect rtl environment\n\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction'); // setup default state\n\n\t    const settings = getSettings(input, user_settings);\n\t    this.settings = settings;\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required; // search system\n\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: settings.diacritics\n\t    }); // option-dependent defaults\n\n\t    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\n\t    if (typeof settings.hideSelected !== 'boolean') {\n\t      settings.hideSelected = settings.mode === 'multi';\n\t    }\n\n\t    if (typeof settings.hidePlaceholder !== 'boolean') {\n\t      settings.hidePlaceholder = settings.mode !== 'multi';\n\t    } // set up createFilter callback\n\n\n\t    var filter = settings.createFilter;\n\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\n\t      if (filter instanceof RegExp) {\n\t        settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        settings.createFilter = () => true;\n\t      }\n\t    }\n\n\t    this.initializePlugins(settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates(); // Create all elements\n\n\t    const wrapper = getDom('<div>');\n\t    const control = getDom('<div>');\n\n\t    const dropdown = this._render('dropdown');\n\n\t    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\t    const classes = this.input.getAttribute('class') || '';\n\t    const inputMode = settings.mode;\n\t    var control_input;\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    addClasses(control, settings.controlClass);\n\t    append(wrapper, control);\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\n\t    if (settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    append(dropdown, dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown); // default controlInput\n\n\t    if (isHtmlString(settings.controlInput)) {\n\t      control_input = getDom(settings.controlInput); // set attributes\n\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete'];\n\t      iterate(attrs, attr => {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      });\n\t      control_input.tabIndex = -1;\n\t      control.appendChild(control_input);\n\t      this.focus_node = control_input; // dom element\t\n\t    } else if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t      this.focus_node = control_input;\n\t    } else {\n\t      control_input = getDom('<input/>');\n\t      this.focus_node = control;\n\t    }\n\n\t    this.wrapper = wrapper;\n\t    this.dropdown = dropdown;\n\t    this.dropdown_content = dropdown_content;\n\t    this.control = control;\n\t    this.control_input = control_input;\n\t    this.setup();\n\t  }\n\t  /**\n\t   * set up event bindings.\n\t   *\n\t   */\n\n\n\t  setup() {\n\t    const self = this;\n\t    const settings = self.settings;\n\t    const control_input = self.control_input;\n\t    const dropdown = self.dropdown;\n\t    const dropdown_content = self.dropdown_content;\n\t    const wrapper = self.wrapper;\n\t    const control = self.control;\n\t    const input = self.input;\n\t    const focus_node = self.focus_node;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    setAttr(dropdown_content, {\n\t      id: listboxId\n\t    });\n\t    setAttr(focus_node, {\n\t      role: 'combobox',\n\t      'aria-haspopup': 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    const control_id = getId(focus_node, self.inputId + '-ts-control');\n\t    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    const label = document.querySelector(query);\n\t    const label_click = self.focus.bind(self);\n\n\t    if (label) {\n\t      addEvent(label, 'click', label_click);\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      const label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(focus_node, {\n\t        'aria-labelledby': label_id\n\t      });\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\n\t    wrapper.style.width = input.style.width;\n\n\t    if (self.plugins.names.length) {\n\t      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\n\t    if (self.settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    } // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\n\n\t    if (!self.settings.splitOn && self.settings.delimiter) {\n\t      self.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t    } // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\n\n\t    if (settings.load && settings.loadThrottle) {\n\t      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n\t    }\n\n\t    self.control_input.type = input.type; // clicking on an option should select it\n\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t        preventDefault(evt, true);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        preventDefault(evt, true);\n\t        return;\n\t      } // retain focus (see control_input mousedown)\n\n\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\n\t      self.onClick();\n\t      preventDefault(evt, true);\n\t    }); // keydown on focus_node for arrow_down/arrow_up\n\n\t    addEvent(focus_node, 'keydown', e => self.onKeyDown(e)); // keypress and input/keyup\n\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'input', e => self.onInput(e));\n\t    addEvent(focus_node, 'resize', () => self.positionDropdown(), passive_event);\n\t    addEvent(focus_node, 'blur', e => self.onBlur(e));\n\t    addEvent(focus_node, 'focus', e => self.onFocus(e));\n\t    addEvent(focus_node, 'paste', e => self.onPaste(e));\n\n\t    const doc_mousedown = evt => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      const target = evt.composedPath()[0];\n\n\t      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\n\t        self.inputState();\n\t        return;\n\t      } // retain focus by preventing native handling. if the\n\t      // event target is the input it should not be modified.\n\t      // otherwise, text selection within the input won't work.\n\t      // Fixes bug #212 which is no covered by tests\n\n\n\t      if (target == control_input && self.isOpen) {\n\t        evt.stopPropagation(); // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t      } else {\n\t        preventDefault(evt, true);\n\t      }\n\t    };\n\n\t    var win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'scroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\n\t    this._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('sroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t      if (label) label.removeEventListener('click', label_click);\n\t    }; // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\n\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.sync(false);\n\t    settings.items = [];\n\t    delete settings.optgroups;\n\t    delete settings.options;\n\t    addEvent(input, 'invalid', e => {\n\t      if (self.isValid) {\n\t        self.isValid = false;\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.close(false);\n\t    self.inputState();\n\t    self.isSetup = true;\n\n\t    if (input.disabled) {\n\t      self.disable();\n\t    } else {\n\t      self.enable(); //sets tabIndex\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n\t    self.trigger('initialize'); // preload options\n\n\t    if (settings.preload === true) {\n\t      self.preload();\n\t    }\n\t  }\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\n\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    this.addOptions(options); // build optgroup table\n\n\t    iterate(optgroups, optgroup => {\n\t      this.registerOptionGroup(optgroup);\n\t    });\n\t  }\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\n\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': data => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': () => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': () => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\n\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'item_select': 'onItemSelect',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\t  /**\n\t   * Sync the Tom Select instance with the original input or select\n\t   *\n\t   */\n\n\n\t  sync(get_settings = true) {\n\t    const self = this;\n\t    const settings = get_settings ? getSettings(self.input, {\n\t      delimiter: self.settings.delimiter\n\t    }) : self.settings;\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items, true); // silent prevents recursion\n\n\t    self.lastQuery = null; // so updated options will be displayed in dropdown\n\t  }\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\n\n\t  onClick() {\n\t    var self = this;\n\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\n\n\t  onMouseDown() {}\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\n\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\n\n\t  onPaste(e) {\n\t    var self = this;\n\n\t    if (self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    } // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\n\n\t    if (self.settings.splitOn) {\n\t      // Wait for pasted text to be recognized in value\n\t      setTimeout(() => {\n\t        var pastedText = self.inputValue();\n\n\t        if (!pastedText.match(self.settings.splitOn)) {\n\t          return;\n\t        }\n\n\t        var splitInput = pastedText.trim().split(self.settings.splitOn);\n\t        iterate(splitInput, piece => {\n\t          self.createItem(piece);\n\t        });\n\t      }, 0);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\n\n\t  onKeyPress(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\n\n\t  onKeyDown(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\n\t      return;\n\t    }\n\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          if (self.control_input.value == '') {\n\t            preventDefault(e);\n\t            self.selectAll();\n\t            return;\n\t          }\n\t        }\n\n\t        break;\n\t      // esc: close dropdown\n\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\n\t        self.clearActiveItems();\n\t        return;\n\t      // down: open dropdown or move selection down\n\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // up: move selection up\n\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // return: select active option\n\n\t      case KEY_RETURN:\n\t        if (self.canSelect(self.activeOption)) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e); // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e);\n\t        }\n\n\t        return;\n\t      // left: modifiy item selection to the left\n\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\t      // right: modifiy item selection to the right\n\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\t      // tab: select active option and/or create item\n\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.canSelect(self.activeOption)) {\n\t            self.onOptionSelect(e, self.activeOption); // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\n\t            preventDefault(e);\n\t          }\n\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\n\t        return;\n\t      // delete|backspace: delete items\n\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    } // don't enter text in the control_input when active items are selected\n\n\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\n\n\t  onInput(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      return;\n\t    }\n\n\t    var value = self.inputValue();\n\n\t    if (self.lastValue !== value) {\n\t      self.lastValue = value;\n\n\t      if (self.settings.shouldLoad.call(self, value)) {\n\t        self.load(value);\n\t      }\n\n\t      self.refreshOptions();\n\t      self.trigger('type', value);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\n\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\n\t    if (self.isDisabled) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.preload();\n\t    if (!wasFocused) self.trigger('focus');\n\n\t    if (!self.activeItems.length) {\n\t      self.showInput();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\n\n\t  onBlur(e) {\n\t    if (document.hasFocus() === false) return;\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, false, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t        self = this; // should not be possible to trigger a option under a disabled optgroup\n\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, true, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\n\t        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n\t          self.setActiveOption(option);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return true if the given option can be selected\n\t   *\n\t   */\n\n\n\t  canSelect(option) {\n\t    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\n\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\n\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\n\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\n\n\t  loadCallback(options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\n\t    self.trigger('load', options, optgroups);\n\t  }\n\n\t  preload() {\n\t    var classList = this.wrapper.classList;\n\t    if (classList.contains('preloaded')) return;\n\t    classList.add('preloaded');\n\t    this.load('');\n\t  }\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\n\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\n\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\n\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\n\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\n\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return; // clear the active selection\n\n\t    if (!item) {\n\t      self.clearActiveItems();\n\n\t      if (self.isFocused) {\n\t        self.showInput();\n\t      }\n\n\t      return;\n\t    } // modify selection\n\n\n\t    eventName = e && e.type.toLowerCase();\n\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    } // ensure control has focus\n\n\n\t    self.hideInput();\n\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\n\n\t  setActiveItemClass(item) {\n\t    const self = this;\n\t    const last_active = self.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\t    self.trigger('item_select', item);\n\n\t    if (self.activeItems.indexOf(item) == -1) {\n\t      self.activeItems.push(item);\n\t    }\n\t  }\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\n\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\n\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\n\n\t  setActiveOption(option) {\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    this.scrollToOption(option);\n\t  }\n\t  /**\n\t   * Sets the dropdown_content scrollTop to display the option\n\t   *\n\t   */\n\n\n\t  scrollToOption(option, behavior) {\n\t    if (!option) return;\n\t    const content = this.dropdown_content;\n\t    const height_menu = content.clientHeight;\n\t    const scrollTop = content.scrollTop || 0;\n\t    const height_item = option.offsetHeight;\n\t    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.scroll(y - height_menu + height_item, behavior);\n\t    } else if (y < scrollTop) {\n\t      this.scroll(y, behavior);\n\t    }\n\t  }\n\t  /**\n\t   * Scroll the dropdown to the given position\n\t   *\n\t   */\n\n\n\t  scroll(scrollTop, behavior) {\n\t    const content = this.dropdown_content;\n\n\t    if (behavior) {\n\t      content.style.scrollBehavior = behavior;\n\t    }\n\n\t    content.scrollTop = scrollTop;\n\t    content.style.scrollBehavior = '';\n\t  }\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\n\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      setAttr(this.activeOption, {\n\t        'aria-selected': null\n\t      });\n\t    }\n\n\t    this.activeOption = null;\n\t    setAttr(this.focus_node, {\n\t      'aria-activedescendant': null\n\t    });\n\t  }\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\n\n\t  selectAll() {\n\t    if (this.settings.mode === 'single') return;\n\t    const activeItems = this.controlChildren();\n\t    if (!activeItems.length) return;\n\t    this.hideInput();\n\t    this.close();\n\t    this.activeItems = activeItems;\n\t    addClasses(activeItems, 'active');\n\t  }\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\n\n\t  inputState() {\n\t    var self = this;\n\t    if (!self.control.contains(self.control_input)) return;\n\t    setAttr(self.control_input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\n\t    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t    } else {\n\t      if (self.settings.hidePlaceholder && self.items.length > 0) {\n\t        setAttr(self.control_input, {\n\t          placeholder: ''\n\t        });\n\t      }\n\n\t      self.isInputHidden = false;\n\t    }\n\n\t    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n\t  }\n\t  /**\n\t   * Hides the input element out of view, while\n\t   * retaining its focus.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  hideInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Restores input visibility.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  showInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Get the input value\n\t   */\n\n\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\n\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled) return;\n\t    self.ignoreFocus = true;\n\n\t    if (self.control_input.offsetWidth) {\n\t      self.control_input.focus();\n\t    } else {\n\t      self.focus_node.focus();\n\t    }\n\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\n\n\t  blur() {\n\t    this.focus_node.blur();\n\t    this.onBlur();\n\t  }\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\n\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\n\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\n\n\t  search(query) {\n\t    var i, result, calculateScore;\n\t    var self = this;\n\t    var options = this.getSearchOptions(); // validate user-provided result scoring function\n\n\t    if (self.settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    } // perform search\n\n\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    } // filter out selected items\n\n\n\t    if (self.settings.hideSelected) {\n\t      for (i = result.items.length - 1; i >= 0; i--) {\n\t        let hashed = hash_key(result.items[i].id);\n\n\t        if (hashed && self.items.indexOf(hashed) !== -1) {\n\t          result.items.splice(i, 1);\n\t        }\n\t      }\n\t    }\n\n\t    return result;\n\t  }\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t    var create;\n\t    const groups = {};\n\t    const groups_order = [];\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    var results = self.search(query);\n\t    var active_option = self.activeOption;\n\t    var show_dropdown = self.settings.shouldOpen || false;\n\t    var dropdown_content = self.dropdown_content;\n\n\t    if (active_option) {\n\t      active_value = active_option.dataset.value;\n\t      active_group = active_option.closest('[data-group]');\n\t    } // build markup\n\n\n\t    n = results.items.length;\n\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    } // render and group available options individually\n\n\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element\n\t      let opt_value = results.items[i].id;\n\t      let option = self.options[opt_value];\n\t      let option_el = self.getOption(opt_value, true); // toggle 'selected' class\n\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_value));\n\t      }\n\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\n\t        if (!self.optgroups.hasOwnProperty(optgroup)) {\n\t          optgroup = '';\n\t        }\n\n\t        if (!groups.hasOwnProperty(optgroup)) {\n\t          groups[optgroup] = document.createDocumentFragment();\n\t          groups_order.push(optgroup);\n\t        } // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\n\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          setAttr(option_el, {\n\t            id: option.$id + '-clone-' + j,\n\t            'aria-selected': null\n\t          });\n\t          option_el.classList.add('ts-cloned');\n\t          removeClasses(option_el, 'active');\n\t        } // make sure we keep the activeOption in the same group\n\n\n\t        if (active_value == opt_value && active_group && active_group.dataset.group === optgroup) {\n\t          active_option = option_el;\n\t        }\n\n\t        groups[optgroup].appendChild(option_el);\n\t      }\n\t    } // sort optgroups\n\n\n\t    if (this.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        var a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t        var b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t        return a_order - b_order;\n\t      });\n\t    } // render optgroup headers & join groups\n\n\n\t    html = document.createDocumentFragment();\n\t    iterate(groups_order, optgroup => {\n\t      if (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\t        let group_options = document.createDocumentFragment();\n\t        let header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t        append(group_options, header);\n\t        append(group_options, groups[optgroup]);\n\t        let group_html = self.render('optgroup', {\n\t          group: self.optgroups[optgroup],\n\t          options: group_options\n\t        });\n\t        append(html, group_html);\n\t      } else {\n\t        append(html, groups[optgroup]);\n\t      }\n\t    });\n\t    dropdown_content.innerHTML = '';\n\t    append(dropdown_content, html); // highlight matching terms inline\n\n\t    if (self.settings.highlight) {\n\t      removeHighlight(dropdown_content);\n\n\t      if (results.query.length && results.tokens.length) {\n\t        iterate(results.tokens, tok => {\n\t          highlight(dropdown_content, tok.regex);\n\t        });\n\t      }\n\t    } // helper method for adding templates to dropdown\n\n\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\n\t      if (content) {\n\t        show_dropdown = true;\n\t        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t      }\n\n\t      return content;\n\t    }; // add loading message\n\n\n\t    if (self.loading) {\n\t      add_template('loading'); // invalid query\n\t    } else if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading'); // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    } // add create option\n\n\n\t    has_create_option = self.canCreate(query);\n\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    } // activate\n\n\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        if (!dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length) {\n\t          active_option = self.getOption(self.items[0]);\n\t        }\n\n\t        if (!dropdown_content.contains(active_option)) {\n\t          let active_index = 0;\n\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\n\t          active_option = self.selectable()[active_index];\n\t        }\n\t      } else if (create) {\n\t        active_option = create;\n\t      }\n\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t        self.scrollToOption(active_option, 'auto');\n\t      }\n\n\t      self.setActiveOption(active_option);\n\t    } else {\n\t      self.clearActiveOption();\n\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\n\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\n\n\t  addOption(data, user_created = false) {\n\t    const self = this; // @deprecated 1.7.7\n\t    // use addOptions( array, user_created ) for adding multiple options\n\n\t    if (Array.isArray(data)) {\n\t      self.addOptions(data, user_created);\n\t      return false;\n\t    }\n\n\t    const key = hash_key(data[self.settings.valueField]);\n\n\t    if (key === null || self.options.hasOwnProperty(key)) {\n\t      return false;\n\t    }\n\n\t    data.$order = data.$order || ++self.order;\n\t    data.$id = self.inputId + '-opt-' + data.$order;\n\t    self.options[key] = data;\n\t    self.lastQuery = null;\n\n\t    if (user_created) {\n\t      self.userOptions[key] = user_created;\n\t      self.trigger('option_add', key, data);\n\t    }\n\n\t    return key;\n\t  }\n\t  /**\n\t   * Add multiple options\n\t   *\n\t   */\n\n\n\t  addOptions(data, user_created = false) {\n\t    iterate(data, dat => {\n\t      this.addOption(dat, user_created);\n\t    });\n\t  }\n\t  /**\n\t   * @deprecated 1.7.7\n\t   */\n\n\n\t  registerOption(data) {\n\t    return this.addOption(data);\n\t  }\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\n\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\n\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\n\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\n\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\n\n\t  updateOption(value, data) {\n\t    const self = this;\n\t    var item_new;\n\t    var index_item;\n\t    const value_old = hash_key(value);\n\t    const value_new = hash_key(data[self.settings.valueField]); // sanity checks\n\n\t    if (value_old === null) return;\n\t    if (!self.options.hasOwnProperty(value_old)) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    const option = self.getOption(value_old);\n\t    const item = self.getItem(value_old);\n\t    data.$order = data.$order || self.options[value_old].$order;\n\t    delete self.options[value_old]; // invalidate render cache\n\t    // don't remove existing node yet, we'll remove it after replacing it\n\n\t    self.uncacheValue(value_new);\n\t    self.options[value_new] = data; // update the option if it's in the dropdown\n\n\t    if (option) {\n\t      if (self.dropdown_content.contains(option)) {\n\t        const option_new = self._render('option', data);\n\n\t        replaceNode(option, option_new);\n\n\t        if (self.activeOption === option) {\n\t          self.setActiveOption(option_new);\n\t        }\n\t      }\n\n\t      option.remove();\n\t    } // update the item if we have one\n\n\n\t    if (item) {\n\t      index_item = self.items.indexOf(value_old);\n\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\n\t      item_new = self._render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      replaceNode(item, item_new);\n\t    } // invalidate last query because we might have updated the sortField\n\n\n\t    self.lastQuery = null;\n\t  }\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\n\n\t  removeOption(value, silent) {\n\t    const self = this;\n\t    value = get_hash(value);\n\t    self.uncacheValue(value);\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\t  /**\n\t   * Clears all options.\n\t   */\n\n\n\t  clearOptions() {\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    var selected = {};\n\t    iterate(this.options, (option, key) => {\n\t      if (this.items.indexOf(key) >= 0) {\n\t        selected[key] = this.options[key];\n\t      }\n\t    });\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getOption(value, create = false) {\n\t    const hashed = hash_key(value);\n\n\t    if (hashed !== null && this.options.hasOwnProperty(hashed)) {\n\t      const option = this.options[hashed];\n\n\t      if (option.$div) {\n\t        return option.$div;\n\t      }\n\n\t      if (create) {\n\t        return this._render('option', option);\n\t      }\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\n\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t        all;\n\n\t    if (!option) {\n\t      return null;\n\t    }\n\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\n\t      return all[i - 1];\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getItem(item) {\n\t    if (typeof item == 'object') {\n\t      return item;\n\t    }\n\n\t    var value = hash_key(item);\n\t    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n\t  }\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\n\t    for (let i = 0, n = items.length; i < n; i++) {\n\t      self.isPending = i < n - 1;\n\t      self.addItem(items[i], silent);\n\t    }\n\t  }\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change', 'dropdown_close'];\n\t    debounce_events(this, events, () => {\n\t      var item, wasFull;\n\t      const self = this;\n\t      const inputMode = self.settings.mode;\n\t      const hashed = hash_key(value);\n\n\t      if (hashed && self.items.indexOf(hashed) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\n\t      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self._render('item', self.options[hashed]);\n\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, hashed);\n\t      self.insertAtCaret(item);\n\n\t      if (self.isSetup) {\n\t        // update menu / remove the option (if this is not one item being added as part of series)\n\t        if (!self.isPending && self.settings.hideSelected) {\n\t          let option = self.getOption(hashed);\n\t          let next = self.getAdjacent(option, 1);\n\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        } // refreshOptions after setActiveOption(),\n\t        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\n\n\t        if (!self.isPending && !self.settings.closeAfterSelect) {\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\t        } // hide the menu if the maximum number of items have been selected or no options are left\n\n\n\t        if (self.settings.closeAfterSelect != false && self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\n\t        self.trigger('item_add', hashed, item);\n\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.inputState();\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\n\n\t  removeItem(item = null, silent) {\n\t    const self = this;\n\t    item = self.getItem(item);\n\t    if (!item) return;\n\t    var i, idx;\n\t    const value = item.dataset.value;\n\t    i = nodeIndex(item);\n\t    item.remove();\n\n\t    if (item.classList.contains('active')) {\n\t      idx = self.activeItems.indexOf(item);\n\t      self.activeItems.splice(idx, 1);\n\t      removeClasses(item, 'active');\n\t    }\n\n\t    self.items.splice(i, 1);\n\t    self.lastQuery = null;\n\n\t    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t      self.removeOption(value, silent);\n\t    }\n\n\t    if (i < self.caretPos) {\n\t      self.setCaret(self.caretPos - 1);\n\t    }\n\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.positionDropdown();\n\t    self.trigger('item_remove', value, item);\n\t  }\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\n\n\t  createItem(input = null, triggerDropdown = true, callback = () => {}) {\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\n\t    self.lock();\n\t    var created = false;\n\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\n\t      self.setTextboxValue();\n\t      self.addOption(data, true);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      callback(data);\n\t      created = true;\n\t    };\n\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\n\t    if (!created) {\n\t      create(output);\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\n\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\n\n\t  refreshState() {\n\t    const self = this;\n\t    self.refreshValidityState();\n\t    const isFull = self.isFull();\n\t    const isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    const wrap_classList = self.wrapper.classList;\n\t    wrap_classList.toggle('focus', self.isFocused);\n\t    wrap_classList.toggle('disabled', self.isDisabled);\n\t    wrap_classList.toggle('required', self.isRequired);\n\t    wrap_classList.toggle('invalid', !self.isValid);\n\t    wrap_classList.toggle('locked', isLocked);\n\t    wrap_classList.toggle('full', isFull);\n\t    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    wrap_classList.toggle('dropdown-active', self.isOpen);\n\t    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n\t    wrap_classList.toggle('has-items', self.items.length > 0);\n\t  }\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\n\n\t  refreshValidityState() {\n\t    var self = this;\n\n\t    if (!self.input.checkValidity) {\n\t      return;\n\t    }\n\n\t    self.isValid = self.input.checkValidity();\n\t    self.isInvalid = !self.isValid;\n\t  }\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\n\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\n\n\t  updateOriginalInput(opts = {}) {\n\t    const self = this;\n\t    var option, label;\n\t    const empty_option = self.input.querySelector('option[value=\"\"]');\n\n\t    if (self.is_select_tag) {\n\t      const selected = [];\n\n\t      function AddSelected(option_el, value, label) {\n\t        if (!option_el) {\n\t          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t        } // don't move empty option from top of list\n\t        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\t\t\t\t\n\n\n\t        if (option_el != empty_option) {\n\t          self.input.append(option_el);\n\t        }\n\n\t        selected.push(option_el);\n\t        option_el.selected = true;\n\t        return option_el;\n\t      } // unselect all selected options\n\n\n\t      self.input.querySelectorAll('option:checked').forEach(option_el => {\n\t        option_el.selected = false;\n\t      }); // nothing selected?\n\n\t      if (self.items.length == 0 && self.settings.mode == 'single') {\n\t        AddSelected(empty_option, \"\", \"\"); // order selected <option> tags for values in self.items\n\t      } else {\n\t        self.items.forEach(value => {\n\t          option = self.options[value];\n\t          label = option[self.settings.labelField] || '';\n\n\t          if (selected.includes(option.$option)) {\n\t            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n\t            AddSelected(reuse_opt, value, label);\n\t          } else {\n\t            option.$option = AddSelected(option.$option, value, label);\n\t          }\n\t        });\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\n\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\n\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.hideInput();\n\t      }\n\t    }\n\n\t    self.isOpen = false;\n\t    setAttr(self.focus_node, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\n\t    if (self.settings.hideSelected) {\n\t      self.clearActiveOption();\n\t    }\n\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\n\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\n\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\t    iterate(items, item => {\n\t      self.removeItem(item, true);\n\t    });\n\t    self.showInput();\n\t    if (!silent) self.updateOriginalInput();\n\t    self.trigger('clear');\n\t  }\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  insertAtCaret(el) {\n\t    const self = this;\n\t    const caret = self.caretPos;\n\t    const target = self.control;\n\t    target.insertBefore(el, target.children[caret]);\n\t    self.setCaret(caret + 1);\n\t  }\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\n\n\t  deleteSelection(e) {\n\t    var direction, selection, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input); // determine items that will be removed\n\n\t    const rm_items = [];\n\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\n\t      iterate(self.activeItems, item => rm_items.push(item));\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      const items = self.controlChildren();\n\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        rm_items.push(items[self.caretPos - 1]);\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        rm_items.push(items[self.caretPos]);\n\t      }\n\t    }\n\n\t    const values = rm_items.map(item => item.dataset.value); // allow the callback to abort\n\n\t    if (!values.length || typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self, values, e) === false) {\n\t      return false;\n\t    }\n\n\t    preventDefault(e, true); // perform removal\n\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\n\t    while (rm_items.length) {\n\t      self.removeItem(rm_items.pop());\n\t    }\n\n\t    self.showInput();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\n\n\t  advanceSelection(direction, e) {\n\t    var last_active,\n\t        adjacent,\n\t        self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return; // add or remove to active items\n\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        } // if no active item, get items adjacent to the control input\n\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      } // move caret to the left or right\n\n\t    } else {\n\t      self.moveCaret(direction);\n\t    }\n\t  }\n\n\t  moveCaret(direction) {}\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\n\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\n\t    var result = this.control.querySelectorAll('.active');\n\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\n\t  setCaret(new_pos) {\n\t    this.caretPos = this.items.length;\n\t  }\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\n\n\t  controlChildren() {\n\t    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n\t  }\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\n\n\t  lock() {\n\t    this.isLocked = true;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\n\n\t  unlock() {\n\t    this.isLocked = false;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\n\n\t  disable() {\n\t    var self = this;\n\t    self.input.disabled = true;\n\t    self.control_input.disabled = true;\n\t    self.focus_node.tabIndex = -1;\n\t    self.isDisabled = true;\n\t    this.close();\n\t    self.lock();\n\t  }\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\n\n\t  enable() {\n\t    var self = this;\n\t    self.input.disabled = false;\n\t    self.control_input.disabled = false;\n\t    self.focus_node.tabIndex = self.tabIndex;\n\t    self.isDisabled = false;\n\t    self.unlock();\n\t  }\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\n\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n\n\t    self._destroy();\n\n\t    delete self.input.tomselect;\n\t  }\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\n\n\t  render(templateName, data) {\n\t    if (typeof this.settings.render[templateName] !== 'function') {\n\t      return null;\n\t    }\n\n\t    return this._render(templateName, data);\n\t  }\n\t  /**\n\t   * _render() can be called directly when we know we don't want to hit the cache\n\t   * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\n\t   */\n\n\n\t  _render(templateName, data) {\n\t    var value = '',\n\t        id,\n\t        html;\n\t    const self = this;\n\n\t    if (templateName === 'option' || templateName == 'item') {\n\t      value = get_hash(data[self.settings.valueField]);\n\t    } // render markup\n\n\n\t    html = self.settings.render[templateName].call(this, data, escape_html);\n\n\t    if (html == null) {\n\t      return html;\n\t    }\n\n\t    html = getDom(html); // add mandatory attributes\n\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      setAttr(html, {\n\t        'data-value': value\n\t      }); // make sure we have some classes if a template is overwritten\n\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t        setAttr(html, {\n\t          'data-ts-item': ''\n\t        });\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        }); // update cache\n\n\t        self.options[value].$div = html;\n\t      }\n\t    }\n\n\t    return html;\n\t  }\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\n\n\t  clearCache() {\n\t    iterate(this.options, (option, value) => {\n\t      if (option.$div) {\n\t        option.$div.remove();\n\t        delete option.$div;\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes a value from item and option caches\n\t   *\n\t   */\n\n\n\t  uncacheValue(value) {\n\t    const option_el = this.getOption(value);\n\t    if (option_el) option_el.remove();\n\t  }\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\n\n\t  canCreate(input) {\n\t    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n\t  }\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\n\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\n\t    self[method] = function () {\n\t      var result, result_new;\n\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      result_new = new_fn.apply(self, arguments);\n\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      return result;\n\t    };\n\t  }\n\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction change_listener () {\n\t  addEvent(this.input, 'change', () => {\n\t    this.sync();\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction checkbox_options () {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false; // update the checkbox for an option\n\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input');\n\n\t      if (option.classList.contains('selected')) {\n\t        checkbox.checked = true;\n\t      } else {\n\t        checkbox.checked = false;\n\t      }\n\t    }, 1);\n\t  }; // add checkbox to option template\n\n\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\n\t    self.settings.render.option = (data, escape_html) => {\n\t      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t      var checkbox = document.createElement('input');\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      const hashed = hash_key(data[self.settings.valueField]);\n\n\t      if (hashed && self.items.indexOf(hashed) > -1) {\n\t        checkbox.checked = true;\n\t      }\n\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  }); // uncheck when item removed\n\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // remove items when selected option is clicked\n\n\t  self.hook('instead', 'onOptionSelect', (evt, option) => {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\n\t    orig_onOptionSelect.call(self, evt, option);\n\t    UpdateCheckbox(option);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction clear_button (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      self.clear();\n\n\t      if (self.settings.mode === 'single' && self.settings.allowEmptyOption) {\n\t        self.addItem('');\n\t      }\n\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction drag_drop () {\n\t  var self = this;\n\t  if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  self.hook('instead', 'lock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.disable();\n\t    return orig_lock.call(self);\n\t  });\n\t  self.hook('instead', 'unlock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.enable();\n\t    return orig_unlock.call(self);\n\t  });\n\t  self.on('initialize', () => {\n\t    var $control = $(self.control).sortable({\n\t      items: '[data-value]',\n\t      forcePlaceholderSize: true,\n\t      disabled: self.isLocked,\n\t      start: (e, ui) => {\n\t        ui.placeholder.css('width', ui.helper.css('width'));\n\t        $control.css({\n\t          overflow: 'visible'\n\t        });\n\t      },\n\t      stop: () => {\n\t        $control.css({\n\t          overflow: 'hidden'\n\t        });\n\t        var values = [];\n\t        $control.children('[data-value]').each(function () {\n\t          if (this.dataset.value) values.push(this.dataset.value);\n\t        });\n\t        self.setValue(values);\n\t      }\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction dropdown_header (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction caret_position () {\n\t  var self = this;\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\t  self.hook('instead', 'setCaret', new_pos => {\n\t    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\n\t    self.caretPos = new_pos;\n\t  });\n\t  self.hook('instead', 'moveCaret', direction => {\n\t    if (!self.isFocused) return; // move caret before or after selected items\n\n\t    const last_active = self.getLastActive(direction);\n\n\t    if (last_active) {\n\t      const idx = nodeIndex(last_active);\n\t      self.setCaret(direction > 0 ? idx + 1 : idx);\n\t      self.setActiveItem(); // move caret left or right of current position\n\t    } else {\n\t      self.setCaret(self.caretPos + direction);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction dropdown_input () {\n\t  var self = this;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.hook('before', 'setup', () => {\n\t    self.focus_node = self.control;\n\t    addClasses(self.control_input, 'dropdown-input');\n\t    const div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.append(self.control_input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t  });\n\t  self.on('initialize', () => {\n\t    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t    self.control_input.addEventListener('keydown', evt => {\n\t      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t      switch (evt.keyCode) {\n\t        case KEY_ESC:\n\t          if (self.isOpen) {\n\t            preventDefault(evt, true);\n\t            self.close();\n\t          }\n\n\t          self.clearActiveItems();\n\t          return;\n\n\t        case KEY_TAB:\n\t          self.focus_node.tabIndex = -1;\n\t          break;\n\t      }\n\n\t      return self.onKeyDown.call(self, evt);\n\t    });\n\t    self.on('blur', () => {\n\t      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t    }); // give the control_input focus when the dropdown is open\n\n\t    self.on('dropdown_open', () => {\n\t      self.control_input.focus();\n\t    }); // prevent onBlur from closing when focus is on the control_input\n\n\t    const orig_onBlur = self.onBlur;\n\t    self.hook('instead', 'onBlur', evt => {\n\t      if (evt && evt.relatedTarget == self.control_input) return;\n\t      return orig_onBlur.call(self);\n\t    });\n\t    addEvent(self.control_input, 'blur', () => self.onBlur()); // return focus to control to allow further keyboard input\n\n\t    self.hook('before', 'close', () => {\n\t      if (!self.isOpen) return;\n\t      self.focus_node.focus();\n\t    });\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction input_autogrow () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\n\n\t    var resize = () => {\n\t      if (self.items.length > 0) {\n\t        test_input.textContent = control.value;\n\t        control.style.width = test_input.clientWidth + 'px';\n\t      } else {\n\t        control.style.width = '';\n\t      }\n\t    };\n\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction no_backspace_delete () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', evt => {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.call(self, evt);\n\t    }\n\n\t    return false;\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction no_active_items () {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t}\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction optgroup_columns () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', evt => {\n\t    var index, option, options, optgroup;\n\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.call(self, evt);\n\t    }\n\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction remove_button (userOptions) {\n\t  const options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, userOptions); //options.className = 'remove-single';\n\n\t  var self = this; // override the render method to add remove button to each item\n\n\t  if (!options.append) {\n\t    return;\n\t  }\n\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\n\t    self.settings.render.item = (data, escape) => {\n\t      var rendered = getDom(orig_render_item.call(self, data, escape));\n\t      var close_button = getDom(html);\n\t      rendered.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        var value = rendered.dataset.value;\n\t        self.removeItem(value);\n\t        self.refreshOptions(false);\n\t      });\n\t      return rendered;\n\t    };\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction restore_on_backspace (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    text: option => {\n\t      return option[self.settings.labelField];\n\t    }\n\t  }, userOptions);\n\t  self.on('item_remove', function (value) {\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t}\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tfunction virtual_scroll () {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  } // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\n\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }]; // can we load more results for given query?\n\n\t  function canLoadMore(query) {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return false;\n\t    }\n\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  } // set the next url that will be\n\n\n\t  self.setNextUrl = function (value, next_url) {\n\t    pagination[value] = next_url;\n\t  }; // getUrl() to be used in settings.load()\n\n\n\t  self.getUrl = function (query) {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    } // if the user goes back to a previous query\n\t    // we need to load the first page again\n\n\n\t    pagination = {};\n\t    return self.settings.firstUrl(query);\n\t  }; // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\n\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\n\t    return orig_clearActiveOption.call(self);\n\t  }); // override the canLoad method\n\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(self, query);\n\t    }\n\n\t    return canLoadMore(query);\n\t  }); // wrap the load\n\n\t  self.hook('instead', 'loadCallback', (options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions();\n\t    }\n\n\t    orig_loadCallback.call(self, options, optgroups);\n\t    loading_more = false;\n\t  }); // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\t      if (option) option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  }); // add scroll listener and default templates\n\n\t  self.on('initialize', () => {\n\t    dropdown_content = self.dropdown_content; // default templates\n\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: function () {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: function () {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render); // watch dropdown content scroll position\n\n\t    dropdown_content.addEventListener('scroll', function () {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\n\t      if (scroll_percent < 0.95) {\n\t        return;\n\t      } // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\n\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      } // don't call load() too much\n\n\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t}\n\n\tTomSelect.define('change_listener', change_listener);\n\tTomSelect.define('checkbox_options', checkbox_options);\n\tTomSelect.define('clear_button', clear_button);\n\tTomSelect.define('drag_drop', drag_drop);\n\tTomSelect.define('dropdown_header', dropdown_header);\n\tTomSelect.define('caret_position', caret_position);\n\tTomSelect.define('dropdown_input', dropdown_input);\n\tTomSelect.define('input_autogrow', input_autogrow);\n\tTomSelect.define('no_backspace_delete', no_backspace_delete);\n\tTomSelect.define('no_active_items', no_active_items);\n\tTomSelect.define('optgroup_columns', optgroup_columns);\n\tTomSelect.define('remove_button', remove_button);\n\tTomSelect.define('restore_on_backspace', restore_on_backspace);\n\tTomSelect.define('virtual_scroll', virtual_scroll);\n\n\treturn TomSelect;\n\n})));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n//# sourceMappingURL=tom-select.complete.js.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\r\nwindow.TomSelect = require('tom-select');\r\n"],"names":["module","exports","forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","MicroPlugin","Interface","plugins","super","names","settings","requested","loaded","static","name","fn","initializePlugins","key","queue","Array","isArray","plugin","options","hasOwnProperty","shift","require","loadPlugin","Error","latin_pat","accent_pat","accent_reg","RegExp","diacritic_patterns","latin_convert","convert_pat","Object","keys","join","code_points","asciifold","str","normalize","replace","toLowerCase","foreignletter","arrayToPattern","chars","glue","longest","a","Math","max","allSubstrings","input","result","substring","subresult","tmp","slice","charAt","unshift","generateDiacritics","diacritics","code_range","i","diacritic","String","fromCharCode","latin","patt","match","latin_chars","sort","b","pattern","map","sub_pat","l","diacriticRegexPoints","regex","undefined","part","no_accent","composed_part","getAttr","obj","getAttrNesting","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","iterate","object","cmp","Sifter","items","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","getScoreFunction","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_empty","sort_flds","multipliers","bind","get_field","id","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","filter","fn_sort","limit","getDom","jquery","HTMLElement","isHtmlString","div","document","createElement","innerHTML","firstChild","querySelector","arg","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","isEmptyObject","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","val","attr","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","node","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightChildren","nodeType","childNodes","test","tagName","highlightRecursive","removeHighlight","elements","querySelectorAll","prototype","call","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","controlClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","delay","timeout","loading","clearTimeout","setTimeout","loadedSearches","debounce_events","types","type","event_args","getSelection","start","selectionStart","selectionEnd","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","optionsMap","group_count","readData","addOption","addGroup","settings_element","init_textbox","data_raw","JSON","parse","opt","values","dataset","json","group","arr","option_data","disabled","$option","selected","optgroup","optgroup_data","children","hasAttribute","child","instance_i","TomSelect","input_arg","user_settings","dir","order","isOpen","isDisabled","isInvalid","isValid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","lastValue","caretPos","activeOption","activeItems","userOptions","tomselect","window","getComputedStyle","getPropertyValue","tabIndex","is_select_tag","rtl","inputId","isRequired","required","sifter","setupCallbacks","setupTemplates","control","dropdown","_render","dropdown_content","inputMode","control_input","focus_node","setup","passive_event","passive","listboxId","role","control_id","label","label_click","focus","for","label_id","width","classes_plugins","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyPress","onInput","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","_destroy","removeEventListener","revertSettings","insertAdjacentElement","sync","refreshState","updateOriginalInput","refreshItems","close","disable","enable","onChange","setupOptions","addOptions","registerOptionGroup","templates","escape","callbacks","get_settings","setValue","lastQuery","clearActiveItems","onMouseDown","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","selectAll","open","next","getAdjacent","setActiveOption","prev","canSelect","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","hasFocus","deactivate","setActiveItem","setCaret","parentElement","closeAfterSelect","addItem","canLoad","loadCallback","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","toggle","offsetWidth","getSearchOptions","calculateScore","currentResults","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","includes","createDocumentFragment","$id","$order","group_options","header","group_html","tok","add_template","template","insertBefore","canCreate","active_index","selectable","user_created","dat","registerOption","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_old","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","$div","all","x","isPending","wasFull","isFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","wrap_classList","checkValidity","opts","empty_option","AddSelected","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","rm_items","onDelete","pop","adjacent","nextElementSibling","moveCaret","new_pos","from","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","change_listener","checkbox_options","orig_onOptionSelect","UpdateCheckbox","checkbox","checked","orig_render_option","rendered","prepend","clear_button","title","button","drag_drop","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","dropdown_header","headerClass","titleRowClass","labelClass","closeClass","close_link","caret_position","dropdown_input","orig_onBlur","relatedTarget","input_autogrow","test_input","cssText","transfer_styles","style_name","resize","clientWidth","no_backspace_delete","orig_deleteSelection","no_active_items","optgroup_columns","orig_keydown","previousSibling","nextSibling","remove_button","orig_render_item","close_button","restore_on_backspace","text","virtual_scroll","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","no_more_results","scrollHeight","define","factory","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}